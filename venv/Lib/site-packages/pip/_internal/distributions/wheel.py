<<<<<<< HEAD
from zipfile import ZipFile

from pip._vendor.pkg_resources import Distribution

from pip._internal.distributions.base import AbstractDistribution
from pip._internal.index.package_finder import PackageFinder
from pip._internal.utils.wheel import pkg_resources_distribution_for_wheel

=======
<<<<<<< HEAD
from typing import TYPE_CHECKING, Optional

from pip._vendor.packaging.utils import canonicalize_name

from pip._internal.distributions.base import AbstractDistribution
=======
from pip._vendor.packaging.utils import canonicalize_name

from pip._internal.distributions.base import AbstractDistribution
from pip._internal.index.package_finder import PackageFinder
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
from pip._internal.metadata import (
    BaseDistribution,
    FilesystemWheel,
    get_wheel_distribution,
)

<<<<<<< HEAD
if TYPE_CHECKING:
    from pip._internal.index.package_finder import PackageFinder

=======
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581

class WheelDistribution(AbstractDistribution):
    """Represents a wheel distribution.

    This does not need any preparation as wheels can be directly unpacked.
    """

<<<<<<< HEAD
    def get_pkg_resources_distribution(self) -> Distribution:
=======
<<<<<<< HEAD
    @property
    def build_tracker_id(self) -> Optional[str]:
        return None

=======
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
    def get_metadata_distribution(self) -> BaseDistribution:
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
        """Loads the metadata from the wheel file into memory and returns a
        Distribution that uses it, not relying on the wheel file or
        requirement.
        """
<<<<<<< HEAD
        # Set as part of preparation during download.
        assert self.req.local_file_path
        # Wheels are never unnamed.
        assert self.req.name

        with ZipFile(self.req.local_file_path, allowZip64=True) as z:
            return pkg_resources_distribution_for_wheel(
                z, self.req.name, self.req.local_file_path
            )

    def prepare_distribution_metadata(
        self, finder: PackageFinder, build_isolation: bool
=======
        assert self.req.local_file_path, "Set as part of preparation during download"
        assert self.req.name, "Wheels are never unnamed"
        wheel = FilesystemWheel(self.req.local_file_path)
        return get_wheel_distribution(wheel, canonicalize_name(self.req.name))

    def prepare_distribution_metadata(
        self,
<<<<<<< HEAD
        finder: "PackageFinder",
=======
        finder: PackageFinder,
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
        build_isolation: bool,
        check_build_deps: bool,
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
    ) -> None:
        pass
