<<<<<<< HEAD
=======
<<<<<<< HEAD
from dataclasses import dataclass

from pip._vendor.packaging.version import Version
from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link


@dataclass(frozen=True)
class InstallationCandidate:
=======
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link
from pip._internal.utils.models import KeyBasedCompareMixin


class InstallationCandidate(KeyBasedCompareMixin):
<<<<<<< HEAD
    """Represents a potential "candidate" for installation.
    """

    __slots__ = ["name", "version", "link"]

=======
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
    """Represents a potential "candidate" for installation."""

    __slots__ = ["name", "version", "link"]

<<<<<<< HEAD
    name: str
    version: Version
    link: Link

    def __init__(self, name: str, version: str, link: Link) -> None:
        object.__setattr__(self, "name", name)
        object.__setattr__(self, "version", parse_version(version))
        object.__setattr__(self, "link", link)

    def __str__(self) -> str:
        return f"{self.name!r} candidate (version {self.version} at {self.link})"
=======
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
    def __init__(self, name: str, version: str, link: Link) -> None:
        self.name = name
        self.version = parse_version(version)
        self.link = link

        super().__init__(
            key=(self.name, self.version, self.link),
<<<<<<< HEAD
            defining_class=InstallationCandidate
=======
            defining_class=InstallationCandidate,
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
        )

    def __repr__(self) -> str:
        return "<InstallationCandidate({!r}, {!r}, {!r})>".format(
<<<<<<< HEAD
            self.name, self.version, self.link,
        )

    def __str__(self) -> str:
        return '{!r} candidate (version {} at {})'.format(
            self.name, self.version, self.link,
        )
=======
            self.name,
            self.version,
            self.link,
        )

    def __str__(self) -> str:
        return "{!r} candidate (version {} at {})".format(
            self.name,
            self.version,
            self.link,
        )
>>>>>>> f11c6dfe4dac5bf5ab7bec429f691c1b69370e6a
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
