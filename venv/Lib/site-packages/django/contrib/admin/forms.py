from django.contrib.auth.forms import AuthenticationForm, PasswordChangeForm
from django.core.exceptions import ValidationError
from django.utils.translation import gettext_lazy as _


class AdminAuthenticationForm(AuthenticationForm):
    """
    A custom authentication form used in the admin app.
    """
<<<<<<< HEAD
    error_messages = {
        **AuthenticationForm.error_messages,
        'invalid_login': _(
=======

    error_messages = {
        **AuthenticationForm.error_messages,
        "invalid_login": _(
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
            "Please enter the correct %(username)s and password for a staff "
            "account. Note that both fields may be case-sensitive."
        ),
    }
<<<<<<< HEAD
    required_css_class = 'required'
=======
    required_css_class = "required"
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581

    def confirm_login_allowed(self, user):
        super().confirm_login_allowed(user)
        if not user.is_staff:
            raise ValidationError(
<<<<<<< HEAD
                self.error_messages['invalid_login'],
                code='invalid_login',
                params={'username': self.username_field.verbose_name}
=======
                self.error_messages["invalid_login"],
                code="invalid_login",
                params={"username": self.username_field.verbose_name},
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
            )


class AdminPasswordChangeForm(PasswordChangeForm):
<<<<<<< HEAD
    required_css_class = 'required'
=======
    required_css_class = "required"
>>>>>>> 32e7214c1350fb4a88064960159c92207483e581
